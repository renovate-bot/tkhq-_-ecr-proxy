apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecr-proxy
spec:
  template:
    spec:
      containers:
        - name: ecr-proxy
          image: ghcr.io/tkhq/ecr-proxy
          env:
            - name: ECR_PROXY_ADDR
              value: ":8080"
            - name: ECR_PROXY_ACCOUNT
              valueFrom:
                configMapKeyRef:
                  name: ecr-proxy
                  key: account
            - name: ECR_PROXY_TLS_ADDR
              value: ":8443"
            - name: ECR_PROXY_TLS_CERT
              value: ""
            - name: ECR_PROXY_TLS_KEY
              value: ""
          args:
            - -addr=$(ECR_PROXY_ADDR)
            - -account=$(ECR_PROXY_ACCOUNT)
            - -region=$(AWS_DEFAULT_REGION) # the AWS_DEFAULT_REGION environment variable is often added by kubernetes controllers e.g. the AWS pod identity hook
            - -tls-addr=$(ECR_PROXY_TLS_ADDR)
            - -tls-cert=$(ECR_PROXY_TLS_CERT)
            - -tls-key=$(ECR_PROXY_TLS_KEY)
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            httpGet:
              path: /health
              port: http
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: ecr-proxy
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels: {}
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels: {}
          matchLabelKeys:
            - pod-template-hash
---
apiVersion: v1
kind: Service
metadata:
  name: ecr-proxy
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
